package main

import (
	"fmt"
	"os"

	"github.com/lignigno/LASCII/v2/lascii"
)

const (
	FONTS_DIR = "../../fonts"
)

// ______________________________________________________________________________MAIN FUNC

func main() {
	// создание арта можно разбить на 3 части
	//
	// 1) ЗАГРУЗИТЬ ШРИФТЫ
	// 2) СОЗДАТЬ АРТ
	// 3) РАСПЕЧАТАТЬ АРТ
	//
	// пройдёмся немного по реализации
	// для этого перейдите в каждую функцию

	// /---------------------\
	// | 1) ЗАГРУЗИТЬ ШРИФТЫ |
	// \---------------------/

	loadingFonts()

	// /----------------\
	// | 2) СОЗДАТЬ АРТ |
	// \----------------/

	art := createArt()

	// /--------------------\
	// | 2) РАСПЕЧАТАТЬ АРТ |
	// \--------------------/

	printArt(art)

	// как узнаете немного о базовых элементах
	// можно будет перейти к их более подробному изучению
}

// ___________________________________________________________________________SUBFUNCTIONS

func loadingFonts() {
	// для загрузки нужно указать "настройки загрузки"

	// кратко опишем какие есть настройки
	// более подробно смотрите в разделе "HOW LOADING YOUR FONTS"
	//
	// Path:      путь до папки/файла со шрифтами/шрифтом
	// Width:     0 - ширинка автоматическая берётся из файла
	// Height:    0 - высота автоматическая берётся из файла
	// HardASCII: false - символы не в соответсвии с таблицей аски

	loadSettings := lascii.LoadingSettings_t{
		Path:      FONTS_DIR + "/super_fonts/letters",
		Width:     0,
		Height:    0,
		HardASCII: false,
	}

	// пробуем загрузить указаные шрифты передав наши настройки
	//
	// после загрузки не нужно передавать шрифты ввиде переменных
	// об этом позаботится фреймворк
	if err := lascii.LoadFonts(loadSettings); err != nil {
		fmt.Fprintf(os.Stderr, "%s", err.Error())
		os.Exit(1)
	}
}

//                                                                                       |
// --------------------------------------------------------------------------------------|
//                                                                                       |

func createArt() [][]rune {
	// только после загрузки шрифта мы уже сразу можем создавать арты

	// чтобы создать арт нужно указать следующее
	//
	// text []rune       - текст который будет создан
	// fontName string   - шрифт который будет использован, один из загруженных
	//                     имя шрифта будет соответсвтовать названию файла без расширения
	// lsb *lascii.LSB_t - "Letter Shaddow Back" настройки цвета, курсива и тд.
	//                     этот параметр подробнее рассмотрим в разделе ANSII ESCAPE CODE
	//                     пока сделаем его пустым

	art, err := lascii.CreateArt([]rune("LASCII"), "style_2_letters", &lascii.LSB_t{})
	if err != nil {
		fmt.Fprintf(os.Stderr, "%s", err.Error())
		os.Exit(1)
	}

	return art
}

//                                                                                       |
// --------------------------------------------------------------------------------------|
//                                                                                       |

func printArt(art [][]rune) {
	// ну а так можно распечатать подготовленный арт

	for i := 0; i < len(art); i++ {
		// благодаря Printf добавлю вертикальные границы
		// и между ними вставлю саму картинку
		fmt.Printf("|%s|\n", string(art[i]))
	}
}
